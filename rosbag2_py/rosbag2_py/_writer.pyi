import rosbag2_py._compression_options
import rosbag2_py._storage
from typing import overload

class SequentialCompressionWriter:
    def __init__(self, arg0: rosbag2_py._compression_options.CompressionOptions) -> None: ...
    def create_topic(self, arg0: rosbag2_py._storage.TopicMetadata) -> None: ...
    def open(self, arg0: rosbag2_py._storage.StorageOptions, arg1: rosbag2_py._storage.ConverterOptions) -> None: ...
    def remove_topic(self, arg0: rosbag2_py._storage.TopicMetadata) -> None: ...
    def split_bagfile(self) -> None: ...
    def take_snapshot(self) -> bool: ...
    @overload
    def write(self, topic_name: str, message: str, time_stamp: int, sequence_number: int = ...) -> None: ...
    @overload
    def write(self, topic_name: str, message: str, recv_timestamp: int, send_timestamp: int, sequence_number: int = ...) -> None: ...

class SequentialWriter:
    def __init__(self) -> None: ...
    def close(self) -> None: ...
    def create_topic(self, arg0: rosbag2_py._storage.TopicMetadata) -> None: ...
    def open(self, arg0: rosbag2_py._storage.StorageOptions, arg1: rosbag2_py._storage.ConverterOptions) -> None: ...
    def remove_topic(self, arg0: rosbag2_py._storage.TopicMetadata) -> None: ...
    def split_bagfile(self) -> None: ...
    def take_snapshot(self) -> bool: ...
    @overload
    def write(self, topic_name: str, message: str, time_stamp: int, sequence_number: int = ...) -> None: ...
    @overload
    def write(self, topic_name: str, message: str, recv_timestamp: int, send_timestamp: int, sequence_number: int = ...) -> None: ...

def get_registered_compressors() -> Set[str]: ...
def get_registered_serializers() -> Set[str]: ...
def get_registered_writers() -> Set[str]: ...
